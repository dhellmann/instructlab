# SPDX-License-Identifier: Apache-2.0

FROM nvcr.io/nvidia/cuda:12.3.2-devel-ubi9
RUN dnf install -y python3.11 git python3-pip make automake gcc gcc-c++
WORKDIR /instructlab
RUN python3.11 -m ensurepip
RUN dnf install -y gcc
RUN rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
RUN dnf config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel9/x86_64/cuda-rhel9.repo && dnf repolist && dnf config-manager --set-enabled cuda-rhel9-x86_64 && dnf config-manager --set-enabled cuda && dnf config-manager --set-enabled epel && dnf update -y
RUN dnf install -y libcudnn8 nvidia-driver-NVML nvidia-driver-cuda-libs

# Instruct pip not to worry about updating itself and to only download
# pre-built packages, not source packages that must be compiled.
ENV PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_COMPILE=1

# Install torch, triton, and nvidia wheels from https://pypi.org,
# without pulling in any of their dependencies. The verbose level is
# turned up so we can examine the logs to verify where packages are
# coming from.
#
# FIXME: pydantic-core is in the list because the UBI9 image does not
# have a new enough version of rustc to build it, but it should be
# possible to build it and move it to the set of dependencies
# installed in the next step when rust 1.76 or later is available.
RUN python3.11 -m pip install -vv --no-cache-dir \
    --no-deps \
    --force-reinstall \
    torch==2.3.0 \
    triton==2.3.0 \
    nvidia-cublas-cu12==12.1.3.1 \
    nvidia-cuda-cupti-cu12==12.1.105 \
    nvidia-cuda-nvrtc-cu12==12.1.105 \
    nvidia-cuda-runtime-cu12==12.1.105 \
    nvidia-cudnn-cu12==8.9.2.26 \
    nvidia-cufft-cu12==11.0.2.54 \
    nvidia-curand-cu12==10.3.2.106 \
    nvidia-cusolver-cu12==11.4.5.107 \
    nvidia-cusparse-cu12==12.1.0.106 \
    nvidia-nccl-cu12==2.20.5 \
    nvidia-nvjitlink-cu12==12.4.127 \
    nvidia-nvtx-cu12==12.1.105 \
    pydantic-core==2.18.2

RUN CMAKE_ARGS="-DLLAMA_CUBLAS=on" python3.11 -m pip install -r https://raw.githubusercontent.com/instructlab/instructlab/stable/requirements.txt --force-reinstall --no-cache-dir llama-cpp-python
RUN python3.11 -m pip install git+https://github.com/instructlab/instructlab.git@stable
CMD ["/bin/bash"]
